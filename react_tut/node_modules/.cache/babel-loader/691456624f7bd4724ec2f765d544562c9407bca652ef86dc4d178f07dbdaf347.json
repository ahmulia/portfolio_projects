{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DT User\\\\Desktop\\\\CS\\\\visual studio\\\\react_tut\\\\src\\\\components\\\\meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memesData from \"../memesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  // const[memeImage, urlLink] = React.useState(\"\")\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/lbij.jpg\"\n  });\n  const [allMemeImages, setAllMemeImages] = React.useState(memesData);\n  function getMeme() {\n    console.log(\"CLICKED\");\n    const theMeme = allMemeImages.data.memes;\n    const randomNumber = Math.floor(Math.random() * theMeme.length);\n    const url = theMeme[randomNumber].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      //pulling all of the properties of previous Meme\n      randomImage: url\n    }));\n  }\n  function InputText(event) {\n    console.log(\"im here\");\n    const [type, placeholder, onChange, name, value] = event.target;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        onChange: InputText,\n        name: \"topText\",\n        value: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        onChange: InputText,\n        name: \"bottomText\",\n        value: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMeme,\n        children: \" Get a new meme image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        alt: \"\",\n        className: \"memeImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"toptxt\",\n        children: [\" \", meme.topText, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bottomtxt\",\n        children: [\" \", meme.bottomText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Meme, \"yOBGlTQKJV5sJpm7EC9MdfOad8Q=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","getMeme","console","log","theMeme","data","memes","randomNumber","Math","floor","random","length","url","prevMeme","InputText","event","type","placeholder","onChange","name","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/DT User/Desktop/CS/visual studio/react_tut/src/components/meme.js"],"sourcesContent":["import React from \"react\";\r\nimport memesData from \"../memesData\";\r\n\r\n\r\nexport default function Meme() {\r\n   // const[memeImage, urlLink] = React.useState(\"\")\r\n\r\n   const [meme, setMeme] = React.useState({\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImage: \"http://i.imgflip.com/lbij.jpg\"\r\n\r\n        }\r\n   )\r\n\r\n   const [allMemeImages, setAllMemeImages] = React.useState(memesData)\r\n\r\n    function getMeme () {\r\n        console.log(\"CLICKED\")\r\n        const theMeme = allMemeImages.data.memes\r\n        const randomNumber = Math.floor(Math.random() * theMeme.length)\r\n        const url = theMeme[randomNumber].url\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme, //pulling all of the properties of previous Meme\r\n            randomImage: url\r\n        }))\r\n       \r\n        \r\n        \r\n    }\r\n\r\n    function InputText (event) {\r\n        console.log(\"im here\")\r\n        const [type,placeholder,onChange,name,value] = event.target\r\n        setMeme (prevMeme => ({\r\n            ...prevMeme,\r\n            [name] : value \r\n\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form\">\r\n\r\n            <div className=\"labels\">\r\n\r\n            <input\r\n             type=\"text\" \r\n             placeholder=\"Top text\"\r\n             onChange={InputText}\r\n             name=\"topText\"\r\n             value={meme.topText}\r\n             />\r\n            \r\n\r\n            <input\r\n             type=\"text\" \r\n             placeholder=\"Bottom text\"\r\n             onChange={InputText}\r\n             name=\"bottomText\"\r\n             value={meme.bottomText}\r\n            />\r\n\r\n             \r\n            \r\n            </div>\r\n            <div className=\"btnContainer\">\r\n            <button onClick={getMeme}> Get a new meme image</button>\r\n            </div>\r\n\r\n            <div className=\"imgContainer\">\r\n            <img src={meme.randomImage} alt=\"\" className=\"memeImg\"/>\r\n            <h2 className=\"toptxt\" > {meme.topText} </h2>\r\n            <h2 className=\"bottomtxt\" > {meme.bottomText}</h2>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}